<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="VideoOS.Diagnostics.Logging" type="VideoOS.Diagnostics.Logging.Configuration.ConfigurationSectionHandler, VideoOS.Utilities"/>
    <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="VideoOS.RemoteClient.MainApp.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false"/>
    </sectionGroup>
  </configSections>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="AVIExporterClientMW"  culture="neutral" publicKeyToken="bc60fba4a7969f89"/>
        <codeBase version="1.0.0.0" href="bin/AVIExporterClientMW.dll"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="VideoOS.Toolkit"  culture="neutral" publicKeyToken="bc60fba4a7969f89"/>
        <codeBase version="1.0.0.0" href="bin/VideoOS.Toolkit.dll"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="VideoOS.DatabaseUtility.Common"  culture="neutral" publicKeyToken="bc60fba4a7969f89"/>
        <codeBase version="1.0.0.0" href="bin/VideoOS.DatabaseUtility.Common.dll"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="VideoOS.DatabaseUtility.MediaStorage"  culture="neutral" publicKeyToken="bc60fba4a7969f89"/>
        <codeBase version="1.0.0.0" href="bin/VideoOS.DatabaseUtility.MediaStorage.dll"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="VideoOS.Platform.Database"  culture="neutral" publicKeyToken="bc60fba4a7969f89"/>
        <codeBase version="1.0.0.0" href="bin/VideoOS.Platform.Database.dll"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Windows.Interactivity"  culture="neutral" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.5.0.0" newVersion="4.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Threading.Tasks.Extensions" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.2.0.1" newVersion="4.2.0.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Memory" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.1" newVersion="4.0.1.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Bcl.AsyncInterfaces" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.0.0" newVersion="5.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Diagnostics.DiagnosticSource" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.0.1" newVersion="5.0.0.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    
    <AppContextSwitchOverrides value="Switch.System.Windows.Controls.Grid.StarDefinitionsCanExceedAvailableSpace=true"/>
  </runtime>
  <system.windows.forms jitDebugging="false"/>
  <appSettings>
    <add key="AbsoluteDataPathByEnvironmentSpecialFolder" value="ApplicationData"/>
    <add key="AbsoluteDataPathByText" value=""/>
    <add key="SoundNotificationFile" value="Notification.wav"/>
    <add key="StatusRequestInterval" value="3000"/>
    <add key="MapTimeoutInGetTypeChanged" value="1000"/>
    <add key="MapTimeoutInGetVisualElementChanges" value="1000"/>
    <add key="MapStatusVisualizationRequestInterval" value="60000"/>
    <add key="ServiceChannelMaxClockSkewInMinutes" value="300"/>
    <!-- Indicates whether or not to enable client diagnostics. Default value is false-->
    <add key="EnableDiagnostics" value="false" />
    <add key="RestartManagerWarningBeforeRestartInterval" value="00:00:30"/>
    <!-- Gets the interval, in milliseconds, before the content toolbars are hidden on no user activity. 
         Zero means that autohide is deactivated.
         The default value is 5000 ms. -->
    <add key="ContentToolbarAutoHideInterval" value="5000" />
    <!-- Timeout waiting for PTZ reply before next ptz command (in millisec) -->
    <add key="PendingPtzTimeoutMilliSec" value="2000" />
    <!-- Time between joystick pollings (in millisec) -->
    <add key="SleepPtzPollingMilliSec" value="10" />
    <!-- Time between image requests in playback (in millisec) -->
    <add key="PlaybackTimerFrequencyMilliSec" value="16" />
    <add key="PlaybackTimerThreadSleepBased" value="true"/>
    <!-- Sets the resolution of the system wide multimedia timer in milliseconds. Specify 0 to use disable that the multimedia timer is set by the application. The default value is 1.-->
    <add key="MultimediaTimerResolutionMilliSec" value="1"/>
    <!-- Temporary Timeline settings -->

    <!-- Gets the length of one block. This is the smallest time interval the cache will load from the retriever. 
        The default value is one hour. -->
    <add key="Timeline_BlockLength" value="1:00:00"/>

    <!-- Gets the ratio of time (compared to the length of the displayed interval) on both sides of the 
        displayed interval for which data will be prefetched to preempt the user's movements.
        The default value is 0.1. -->
    <add key="Timeline_PrefetchRatio" value="0.1"/>

    <!-- Gets the time period a cache for an unused source should be kept for.
        This help in scenarios when the user clicks away on a different view and soon after clicks back.
        The default value is one minute. -->
    <add key="Timeline_UnusedDataKeepSpan" value="0:01:00"/>

    <!-- Gets the ratio of time (compared to the length of the displayed interval) on both sides of the 
        displayed interval for which that will kept in cache and will NOT be released.
        The default value is 1.0. -->
    <add key="Timeline_KeepRatio" value="1.0"/>

    <!-- Gets the refresh interval for sequences that are live - sequences that are happening at the time of the viewing.
        The default value is 30 seconds. -->
    <add key="Timeline_LiveViewsRefreshSpan" value="999:00:00"/> <!-- never refresh in offline mode -->

    <!-- Gets the refresh interval for sequences from the start of the viewed period. This ensures that deleting the
        start of the database is handled properly. The default value is 1 minute. -->
    <add key="Timeline_DatabaseStartRefreshSpan" value="999:00:00"/> <!-- never refresh in offline mode -->

    <!-- Specifies the maximum number of server requests that can be sent in parallel to the same server. The default value is 5. -->
    <add key="Timeline_MaxConcurrentQueries" value="5"/>

    <!-- Indicates the time interval that should be queried at one time from the server. The default value is 6 hours. -->
    <add key="Timeline_TimeSpanOptimizationHint" value="6:00:00"/>

    <!-- Indicates the maximum number of results that should be retrieved at one time.
        This is a throttling parameter designed to ease the load on the server.
        The default value is 80. -->
    <add key="Timeline_MaxResultCount" value="2000"/>

    <!-- List of Export Codecs, known to report video capable, but not to support 24 bits color -->
    <add key="DoNotOfferCodecs" value="Microsoft RLE;Microsoft YUV" />

    <!-- Controls what decoding fallthrough strategy to use. Allowed values: 
    OnlyIntel - Use Intel decoding only;
    OnlyNvidia - Use Nvidia deoding only;
    AutoNvidia - Start decoding on Nvidia.-->
    <add key="FallThroughPriority" value="AutoNvidia"/>

  </appSettings>

  <system.net>
    <defaultProxy enabled="false"/>
    <settings>
      <servicePointManager useNagleAlgorithm="false" expect100Continue="false"/>
    </settings>
    <connectionManagement>
      <!--
            Controls how many simultaneous outgoing connections the client is capable
            of handling towards a specific server. * means all server addressed. All remaining
            connections are queued client side.
            -->
      <add address="*" maxconnection="20"/>
    </connectionManagement>
  </system.net>


  <VideoOS.Diagnostics.Logging>
    <!--
            "type" can be one of:
                File / EventLog / Console

            "level" can be one of:
                debug / info / warning / error

            "filename" specifies the file where a file logger must write its log entries.
                - If filename specifies a full path, that path is used directly.
                   E.g. "C:\Temp\MyLog.txt"
                - If filename is relative - the log file will be relative to the 
                  users TEMP directory - as returned GetTempPath().
                   E.g. ".\MyLog.txt"
                - If filename starts with a tilde (~) then the tilde is replaced with the
                  path to the directory of the executing asembly.
                   E.g. "~\MyLog.txt"
                - If filename is empty then the log file will be placed in the users TEMP
                  directory - as returned GetTempPath() - and the file will get the name 
                  specified in the <Logger> name attribute.
                - If filename contains an enviromental variable then this will be expanded
                
            "archive" specifies the location of the archive folder.
                - The same apply as for the "filename" attribute except for the 
                  empty value which disables archiving.

            "maxsize" specifies the the maximum size - in megabytes - of a log file. A 
            log file is archived when the file size is greater than the maximum size 
            AFTER entries has been written to the log file. So the archived file may be
            slightly larger then this specified size.
            Default: 100 (MB)
            (An archive folder must be spefied for this setting to have any effect)
		-->

    <!-- ServiceChannel log
        <Logger name="ServiceChannelClient">
            <Appender type="File" level="debug" filename=""%ALLUSERSPROFILE%\Milestone\XProtect Smart Client\ServiceChanneLog.txt" archive=""%ALLUSERSPROFILE%\Milestone\XProtect Smart Client\ClientLogs\" maxsize="10" />
        </Logger>
        -->

    <Logger name="ClientLogger">
      <!--<Appender type="File" level="debug" filename="%ALLUSERSPROFILE%\Milestone\XProtect Smart Client\ClientLog.txt" archive="%ALLUSERSPROFILE%\Milestone\XProtect Smart Client\ClientLogs\" maxsize="10"></Appender>-->
      <!--<Appender type="Console" level="debug"></Appender>-->
    </Logger>
    <Logger name="MIPLogger">
      <!--<Appender type="File" level="debug" filename="%ALLUSERSPROFILE%\Milestone\XProtect Smart Client\MIPLog.txt" archive="%ALLUSERSPROFILE%\Milestone\XProtect Smart Client\MIPLogs\" maxsize="10"></Appender>-->
      <!--<Appender type="Console" level="debug"></Appender>-->
    </Logger>
    <Logger name="MetadataLogger">
      <!--<Appender type="File" level="warning" filename="%ALLUSERSPROFILE%\Milestone\XProtect Smart Client\MetadataLogger.txt" archive="%ALLUSERSPROFILE%\Milestone\XProtect Smart Client\MetadataLogs\" maxsize="10"></Appender>-->
      <!--<Appender type="Console" level="debug"></Appender>-->
    </Logger>
    <Logger name="LegacyLogClient">
      <!--<Appender type="File" level="info" filename="%ALLUSERSPROFILE%\Milestone\XProtect Smart Client\LegacyLogClientLog.txt" archive="%ALLUSERSPROFILE%\Milestone\XProtect Smart Client\LegacyLogClientLogs\" maxsize="10"></Appender>-->
      <!--<Appender type="Console" level="debug"></Appender>-->
    </Logger>
  </VideoOS.Diagnostics.Logging>
  <startup useLegacyV2RuntimeActivationPolicy="true">
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7" />
  </startup>
</configuration>
